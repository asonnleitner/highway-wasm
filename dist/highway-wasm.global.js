var WasmHighway = (() => {
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
  var __export = (target, all) => {
    for (var name in all)
      __defProp(target, name, { get: all[name], enumerable: true });
  };
  var __reExport = (target, module, copyDefault, desc) => {
    if (module && typeof module === "object" || typeof module === "function") {
      for (let key of __getOwnPropNames(module))
        if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
          __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
    }
    return target;
  };
  var __toCommonJS = /* @__PURE__ */ ((cache) => {
    return (module, temp) => {
      return cache && cache.get(module) || (temp = __reExport(__markAsModule({}), module, 1), cache && cache.set(module, temp), temp);
    };
  })(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);
  var __toBinary = /* @__PURE__ */ (() => {
    var table = new Uint8Array(128);
    for (var i = 0; i < 64; i++)
      table[i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i * 4 - 205] = i;
    return (base64) => {
      var n = base64.length, bytes = new Uint8Array((n - (base64[n - 1] == "=") - (base64[n - 2] == "=")) * 3 / 4 | 0);
      for (var i2 = 0, j = 0; i2 < n; ) {
        var c0 = table[base64.charCodeAt(i2++)], c1 = table[base64.charCodeAt(i2++)];
        var c2 = table[base64.charCodeAt(i2++)], c3 = table[base64.charCodeAt(i2++)];
        bytes[j++] = c0 << 2 | c1 >> 4;
        bytes[j++] = c1 << 4 | c2 >> 2;
        bytes[j++] = c2 << 6 | c3;
      }
      return bytes;
    };
  })();

  // js/highway-wasm/src/index.ts
  var src_exports = {};
  __export(src_exports, {
    useHighway: () => useHighway,
    useSimd: () => useSimd
  });

  // js/highway-wasm/lib/highway/highway.js
  var wasm;
  var cachedTextDecoder = new TextDecoder("utf-8", { ignoreBOM: true, fatal: true });
  cachedTextDecoder.decode();
  var cachegetUint8Memory0 = null;
  function getUint8Memory0() {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
      cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachegetUint8Memory0;
  }
  function getStringFromWasm0(ptr, len) {
    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
  }
  var cachegetInt32Memory0 = null;
  function getInt32Memory0() {
    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {
      cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);
    }
    return cachegetInt32Memory0;
  }
  function getArrayU8FromWasm0(ptr, len) {
    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);
  }
  var cachegetUint32Memory0 = null;
  function getUint32Memory0() {
    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {
      cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);
    }
    return cachegetUint32Memory0;
  }
  function getArrayU32FromWasm0(ptr, len) {
    return getUint32Memory0().subarray(ptr / 4, ptr / 4 + len);
  }
  var cachegetUint64Memory0 = null;
  function getUint64Memory0() {
    if (cachegetUint64Memory0 === null || cachegetUint64Memory0.buffer !== wasm.memory.buffer) {
      cachegetUint64Memory0 = new BigUint64Array(wasm.memory.buffer);
    }
    return cachegetUint64Memory0;
  }
  function getArrayU64FromWasm0(ptr, len) {
    return getUint64Memory0().subarray(ptr / 8, ptr / 8 + len);
  }
  var WASM_VECTOR_LEN = 0;
  function passArray8ToWasm0(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    getUint8Memory0().set(arg, ptr / 1);
    WASM_VECTOR_LEN = arg.length;
    return ptr;
  }
  var Hash = class {
    static __wrap(ptr) {
      const obj = Object.create(Hash.prototype);
      obj.ptr = ptr;
      return obj;
    }
    __destroy_into_raw() {
      const ptr = this.ptr;
      this.ptr = 0;
      return ptr;
    }
    free() {
      const ptr = this.__destroy_into_raw();
      wasm.__wbg_hash_free(ptr);
    }
    toString() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toString(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        return getStringFromWasm0(r0, r1);
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
        wasm.__wbindgen_free(r0, r1);
      }
    }
    toHex() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toHex(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        return getStringFromWasm0(r0, r1);
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
        wasm.__wbindgen_free(r0, r1);
      }
    }
    toBinary() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toBinary(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        return getStringFromWasm0(r0, r1);
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
        wasm.__wbindgen_free(r0, r1);
      }
    }
    toOctal() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toOctal(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        return getStringFromWasm0(r0, r1);
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
        wasm.__wbindgen_free(r0, r1);
      }
    }
    toBytes() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toBytes(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        var v0 = getArrayU8FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 1);
        return v0;
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
      }
    }
    toUint32Array() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toUint32Array(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        var v0 = getArrayU32FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 4);
        return v0;
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
      }
    }
    toUint64Array() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);
        wasm.hash_toUint64Array(retptr, ptr);
        var r0 = getInt32Memory0()[retptr / 4 + 0];
        var r1 = getInt32Memory0()[retptr / 4 + 1];
        var v0 = getArrayU64FromWasm0(r0, r1).slice();
        wasm.__wbindgen_free(r0, r1 * 8);
        return v0;
      } finally {
        wasm.__wbindgen_add_to_stack_pointer(16);
      }
    }
  };
  var WasmHighway = class {
    static __wrap(ptr) {
      const obj = Object.create(WasmHighway.prototype);
      obj.ptr = ptr;
      return obj;
    }
    __destroy_into_raw() {
      const ptr = this.ptr;
      this.ptr = 0;
      return ptr;
    }
    free() {
      const ptr = this.__destroy_into_raw();
      wasm.__wbg_wasmhighway_free(ptr);
    }
    static new(key) {
      var ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN;
      var ret = wasm.wasmhighway_new(ptr0, len0);
      return WasmHighway.__wrap(ret);
    }
    static hash64(key, data) {
      var ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN;
      var ptr1 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
      var len1 = WASM_VECTOR_LEN;
      var ret = wasm.wasmhighway_hash64(ptr0, len0, ptr1, len1);
      return Hash.__wrap(ret);
    }
    static hash128(key, data) {
      var ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN;
      var ptr1 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
      var len1 = WASM_VECTOR_LEN;
      var ret = wasm.wasmhighway_hash128(ptr0, len0, ptr1, len1);
      return Hash.__wrap(ret);
    }
    static hash256(key, data) {
      var ptr0 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN;
      var ptr1 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
      var len1 = WASM_VECTOR_LEN;
      var ret = wasm.wasmhighway_hash256(ptr0, len0, ptr1, len1);
      return Hash.__wrap(ret);
    }
    append(data) {
      var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN;
      wasm.wasmhighway_append(this.ptr, ptr0, len0);
    }
    finalize64() {
      const ptr = this.__destroy_into_raw();
      var ret = wasm.wasmhighway_finalize64(ptr);
      return Hash.__wrap(ret);
    }
    finalize128() {
      const ptr = this.__destroy_into_raw();
      var ret = wasm.wasmhighway_finalize128(ptr);
      return Hash.__wrap(ret);
    }
    finalize256() {
      const ptr = this.__destroy_into_raw();
      var ret = wasm.wasmhighway_finalize256(ptr);
      return Hash.__wrap(ret);
    }
  };
  async function load(module, imports) {
    if (typeof Response === "function" && module instanceof Response) {
      if (typeof WebAssembly.instantiateStreaming === "function") {
        try {
          return await WebAssembly.instantiateStreaming(module, imports);
        } catch (e) {
          if (module.headers.get("Content-Type") != "application/wasm") {
            console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
          } else {
            throw e;
          }
        }
      }
      const bytes = await module.arrayBuffer();
      return await WebAssembly.instantiate(bytes, imports);
    } else {
      const instance = await WebAssembly.instantiate(module, imports);
      if (instance instanceof WebAssembly.Instance) {
        return { instance, module };
      } else {
        return instance;
      }
    }
  }
  async function init(input) {
    if (typeof input === "undefined") {
      input = new URL("highway_bg.wasm", input);
    }
    const imports = {};
    imports.wbg = {};
    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
      throw new Error(getStringFromWasm0(arg0, arg1));
    };
    if (typeof input === "string" || typeof Request === "function" && input instanceof Request || typeof URL === "function" && input instanceof URL) {
      input = fetch(input);
    }
    const { instance, module } = await load(await input, imports);
    wasm = instance.exports;
    init.__wbindgen_wasm_module = module;
    return wasm;
  }
  var highway_default = init;

  // wasm-binary:/Users/andreassonnleitner/node-workspace/highwayhash-wasm/js/highway-wasm/lib/highway/highway_bg.wasm
  var highway_bg_default = __toBinary("");

  // js/highway-wasm/lib/highway-simd/highway-simd.js
  var wasm2;
  var cachedTextDecoder2 = new TextDecoder("utf-8", { ignoreBOM: true, fatal: true });
  cachedTextDecoder2.decode();
  var cachegetUint8Memory02 = null;
  function getUint8Memory02() {
    if (cachegetUint8Memory02 === null || cachegetUint8Memory02.buffer !== wasm2.memory.buffer) {
      cachegetUint8Memory02 = new Uint8Array(wasm2.memory.buffer);
    }
    return cachegetUint8Memory02;
  }
  function getStringFromWasm02(ptr, len) {
    return cachedTextDecoder2.decode(getUint8Memory02().subarray(ptr, ptr + len));
  }
  var cachegetInt32Memory02 = null;
  function getInt32Memory02() {
    if (cachegetInt32Memory02 === null || cachegetInt32Memory02.buffer !== wasm2.memory.buffer) {
      cachegetInt32Memory02 = new Int32Array(wasm2.memory.buffer);
    }
    return cachegetInt32Memory02;
  }
  function getArrayU8FromWasm02(ptr, len) {
    return getUint8Memory02().subarray(ptr / 1, ptr / 1 + len);
  }
  var cachegetUint32Memory02 = null;
  function getUint32Memory02() {
    if (cachegetUint32Memory02 === null || cachegetUint32Memory02.buffer !== wasm2.memory.buffer) {
      cachegetUint32Memory02 = new Uint32Array(wasm2.memory.buffer);
    }
    return cachegetUint32Memory02;
  }
  function getArrayU32FromWasm02(ptr, len) {
    return getUint32Memory02().subarray(ptr / 4, ptr / 4 + len);
  }
  var cachegetUint64Memory02 = null;
  function getUint64Memory02() {
    if (cachegetUint64Memory02 === null || cachegetUint64Memory02.buffer !== wasm2.memory.buffer) {
      cachegetUint64Memory02 = new BigUint64Array(wasm2.memory.buffer);
    }
    return cachegetUint64Memory02;
  }
  function getArrayU64FromWasm02(ptr, len) {
    return getUint64Memory02().subarray(ptr / 8, ptr / 8 + len);
  }
  var WASM_VECTOR_LEN2 = 0;
  function passArray8ToWasm02(arg, malloc) {
    const ptr = malloc(arg.length * 1);
    getUint8Memory02().set(arg, ptr / 1);
    WASM_VECTOR_LEN2 = arg.length;
    return ptr;
  }
  var Hash2 = class {
    static __wrap(ptr) {
      const obj = Object.create(Hash2.prototype);
      obj.ptr = ptr;
      return obj;
    }
    __destroy_into_raw() {
      const ptr = this.ptr;
      this.ptr = 0;
      return ptr;
    }
    free() {
      const ptr = this.__destroy_into_raw();
      wasm2.__wbg_hash_free(ptr);
    }
    toString() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toString(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        return getStringFromWasm02(r0, r1);
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
        wasm2.__wbindgen_free(r0, r1);
      }
    }
    toHex() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toHex(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        return getStringFromWasm02(r0, r1);
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
        wasm2.__wbindgen_free(r0, r1);
      }
    }
    toBinary() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toBinary(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        return getStringFromWasm02(r0, r1);
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
        wasm2.__wbindgen_free(r0, r1);
      }
    }
    toOctal() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toOctal(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        return getStringFromWasm02(r0, r1);
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
        wasm2.__wbindgen_free(r0, r1);
      }
    }
    toBytes() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toBytes(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        var v0 = getArrayU8FromWasm02(r0, r1).slice();
        wasm2.__wbindgen_free(r0, r1 * 1);
        return v0;
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
      }
    }
    toUint32Array() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toUint32Array(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        var v0 = getArrayU32FromWasm02(r0, r1).slice();
        wasm2.__wbindgen_free(r0, r1 * 4);
        return v0;
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
      }
    }
    toUint64Array() {
      try {
        const ptr = this.__destroy_into_raw();
        const retptr = wasm2.__wbindgen_add_to_stack_pointer(-16);
        wasm2.hash_toUint64Array(retptr, ptr);
        var r0 = getInt32Memory02()[retptr / 4 + 0];
        var r1 = getInt32Memory02()[retptr / 4 + 1];
        var v0 = getArrayU64FromWasm02(r0, r1).slice();
        wasm2.__wbindgen_free(r0, r1 * 8);
        return v0;
      } finally {
        wasm2.__wbindgen_add_to_stack_pointer(16);
      }
    }
  };
  var WasmHighway2 = class {
    static __wrap(ptr) {
      const obj = Object.create(WasmHighway2.prototype);
      obj.ptr = ptr;
      return obj;
    }
    __destroy_into_raw() {
      const ptr = this.ptr;
      this.ptr = 0;
      return ptr;
    }
    free() {
      const ptr = this.__destroy_into_raw();
      wasm2.__wbg_wasmhighway_free(ptr);
    }
    static new(key) {
      var ptr0 = passArray8ToWasm02(key, wasm2.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN2;
      var ret = wasm2.wasmhighway_new(ptr0, len0);
      return WasmHighway2.__wrap(ret);
    }
    static hash64(key, data) {
      var ptr0 = passArray8ToWasm02(key, wasm2.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN2;
      var ptr1 = passArray8ToWasm02(data, wasm2.__wbindgen_malloc);
      var len1 = WASM_VECTOR_LEN2;
      var ret = wasm2.wasmhighway_hash64(ptr0, len0, ptr1, len1);
      return Hash2.__wrap(ret);
    }
    static hash128(key, data) {
      var ptr0 = passArray8ToWasm02(key, wasm2.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN2;
      var ptr1 = passArray8ToWasm02(data, wasm2.__wbindgen_malloc);
      var len1 = WASM_VECTOR_LEN2;
      var ret = wasm2.wasmhighway_hash128(ptr0, len0, ptr1, len1);
      return Hash2.__wrap(ret);
    }
    static hash256(key, data) {
      var ptr0 = passArray8ToWasm02(key, wasm2.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN2;
      var ptr1 = passArray8ToWasm02(data, wasm2.__wbindgen_malloc);
      var len1 = WASM_VECTOR_LEN2;
      var ret = wasm2.wasmhighway_hash256(ptr0, len0, ptr1, len1);
      return Hash2.__wrap(ret);
    }
    append(data) {
      var ptr0 = passArray8ToWasm02(data, wasm2.__wbindgen_malloc);
      var len0 = WASM_VECTOR_LEN2;
      wasm2.wasmhighway_append(this.ptr, ptr0, len0);
    }
    finalize64() {
      const ptr = this.__destroy_into_raw();
      var ret = wasm2.wasmhighway_finalize64(ptr);
      return Hash2.__wrap(ret);
    }
    finalize128() {
      const ptr = this.__destroy_into_raw();
      var ret = wasm2.wasmhighway_finalize128(ptr);
      return Hash2.__wrap(ret);
    }
    finalize256() {
      const ptr = this.__destroy_into_raw();
      var ret = wasm2.wasmhighway_finalize256(ptr);
      return Hash2.__wrap(ret);
    }
  };
  async function load2(module, imports) {
    if (typeof Response === "function" && module instanceof Response) {
      if (typeof WebAssembly.instantiateStreaming === "function") {
        try {
          return await WebAssembly.instantiateStreaming(module, imports);
        } catch (e) {
          if (module.headers.get("Content-Type") != "application/wasm") {
            console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);
          } else {
            throw e;
          }
        }
      }
      const bytes = await module.arrayBuffer();
      return await WebAssembly.instantiate(bytes, imports);
    } else {
      const instance = await WebAssembly.instantiate(module, imports);
      if (instance instanceof WebAssembly.Instance) {
        return { instance, module };
      } else {
        return instance;
      }
    }
  }
  async function init2(input) {
    if (typeof input === "undefined") {
      input = new URL("highway-simd_bg.wasm", input);
    }
    const imports = {};
    imports.wbg = {};
    imports.wbg.__wbindgen_throw = function(arg0, arg1) {
      throw new Error(getStringFromWasm02(arg0, arg1));
    };
    if (typeof input === "string" || typeof Request === "function" && input instanceof Request || typeof URL === "function" && input instanceof URL) {
      input = fetch(input);
    }
    const { instance, module } = await load2(await input, imports);
    wasm2 = instance.exports;
    init2.__wbindgen_wasm_module = module;
    return wasm2;
  }
  var highway_simd_default = init2;

  // wasm-binary:/Users/andreassonnleitner/node-workspace/highwayhash-wasm/js/highway-wasm/lib/highway-simd/highway-simd_bg.wasm
  var highway_simd_bg_default = __toBinary("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wAA2AlAgA0EBNgJsIAMgA0HoAGo2AmAgAyADQShqNgJoIANBQGsgA0HQAGoQBiADQThqIANByABqKAIANgIAIAMgAykDQDcDMCADQQhqIANBMGoiBRBPIAAgAygCCCADKAIMEFIgAUEIaiEBIAUQSyACQQhrIgINAAsLDAMLIAEoAgQhBiABKAIAIQQgASgCCCIBBEAgAUEDdCECIAQhAQNAIAMgASkDADcDKCADQQE2AmQgA0IBNwJUIANBrIHAADYCUCADQQI2AmwgAyADQegAajYCYCADIANBKGo2AmggA0FAayADQdAAahAGIANBOGogA0HIAGooAgA2AgAgAyADKQNANwMwIANBEGogA0EwaiIFEE8gACADKAIQIAMoAhQQUiABQQhqIQEgBRBLIAJBCGsiAg0ACwsMAgsgASgCBCEGIAEoAgAhBCABKAIIIgEEQCABQQN0IQIgBCEBA0AgAyABKQMANwMoIANBATYCZCADQgE3AlQgA0GsgcAANgJQIANBAzYCbCADIANB6ABqNgJgIAMgA0EoajYCaCADQUBrIANB0ABqEAYgA0E4aiADQcgAaigCADYCACADIAMpA0A3AzAgA0EYaiADQTBqIgUQTyAAIAMoAhggAygCHBBSIAFBCGohASAFEEsgAkEIayICDQALCwwBCyABKAIEIQYgASgCACEEIAEoAggiAQRAIAFBA3QhAiAEIQEDQCADIAEpAwA3AyggA0EBNgJkIANCATcCVCADQayBwAA2AlAgA0EENgJsIAMgA0HoAGo2AmAgAyADQShqNgJoIANBQGsgA0HQAGoQBiADQThqIANByABqKAIANgIAIAMgAykDQDcDMCADQSBqIANBMGoiBRBPIAAgAygCICADKAIkEFIgAUEIaiEBIAUQSyACQQhrIgINAAsLCyADIAY2AlQgAyAENgJQIANB0ABqEDogA0HwAGokAAu8AwEGfyMAQRBrIgYkAAJAIABFIAFFcg0AAkAgAkEFTw0AIAFBA2pBAnZBAWsiAkH/AUsNACAAQQA2AgAgAEEIayIBIAEoAgBBfnE2AgAgBkHYjsAANgIMIAAgAkECdEHcjsAAaiIAKAIANgIAIAAgATYCAAwBCyAAQQA2AgAgAEEIayIBIAEoAgAiA0F+cTYCAEHYjsAAKAIAIQcCQAJAAkACQCAAQQRrIgUo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AiACQSBqIgUgBCAAEBogAkGYAmoQQSABIAVB4AEQCBojAEGAAmsiACQAIABBIGogAUHgARAIGkGAAkEgEFEiAUUEQEGAAkEgEGEACyABQQA2AgAgAUEEaiAAQQRqQfwBEAgaIABBgAJqJAAgAyQAIAELegEEfyMAIgNBgARrQWBxIgEkACABQSBqIgIgABAxIAFBoAJqIgAgAkHgARAIGiABQZACaiAAED8gAUEYakECEB8gASgCHCECIAEoAhgiBCAB/QADkAL9CwMAIAFBAjYCqAIgASACNgKkAiABIAQ2AqACIAAQNiADJAALcgIEfwF+IwAiA0HgA2tBYHEiASQAIAFBIGoiAiAAEDEgAUGAAmoiACACQeABEAgaIAAQPCEFIAFBGGpBARAfIAEoAhwhAiABKAIYIgQgBTcDACABQQE2AogCIAEgAjYChAIgASAENgKAAiAAEDYgAyQAC3EAAn8gAkECdCIBIANBA3RBgIABaiICIAEgAksbQYeABGoiAUEQdkAAIgJBf0YEQEEAIQNBAQwBCyACQRB0IgNCADcDACADQQA2AgggAyADIAFBgIB8cWpBAnI2AgBBAAshASAAIAM2AgQgACABNgIAC2sBAn8jAEEQayIGJAACQCAAIAEgAiADIAQQBSIFDQAgBkEIaiADIAAgASAEKAIMEQYAQQAhBSAGKAIIDQAgBigCDCIFIAIoAgA2AgggAiAFNgIAIAAgASACIAMgBBAFIQULIAZBEGokACAFC2wBAX8jAEEwayIDJAAgAyABNgIEIAMgADYCACADQRxqQQI2AgAgA0EsakE0NgIAIANCAjcCDCADQZSLwAA2AgggA0E0NgIkIAMgA0EgajYCGCADIAM2AiggAyADQQRqNgIgIANBCGogAhA7AAtsAQF/IwBBMGsiAyQAIAMgATYCBCADIAA2AgAgA0EcakECNgIAIANBLGpBNDYCACADQgI3AgwgA0HojcAANgIIIANBNDYCJCADIANBIGo2AhggAyADQQRqNgIoIAMgAzYCICADQQhqIAIQOwALbAEBfyMAQTBrIgMkACADIAE2AgQgAyAANgIAIANBHGpBAjYCACADQSxqQTQ2AgAgA0ICNwIMIANBiI7AADYCCCADQTQ2AiQgAyADQSBqNgIYIAMgA0EEajYCKCADIAM2AiAgA0EIaiACEDsAC1kBAX8jAEEgayICJAAgAiAAKAIANgIEIAJBGGogAUEQaikCADcDACACQRBqIAFBCGopAgA3AwAgAiABKQIANwMIIAJBBGpBvIfAACACQQhqEAQgAkEgaiQAC1kBAX8jAEEgayICJAAgAiAAKAIANgIEIAJBGGogAUEQaikCADcDACACQRBqIAFBCGopAgA3AwAgAiABKQIANwMIIAJBBGpBjInAACACQQhqEAQgAkEgaiQAC18BAX8jAEEQayICJAACQCABBEAgASgCAA0BIAFBADYCACACIAH9AAIA/QsDACAAIAIpAgQ3AgAgAEEIaiACQQxqKAIANgIAIAFBEEEEEFYgAkEQaiQADwsQXgALEF8AC1EBAn8jACICQYACa0FgcSIDJAACQCABBEAgASgCAA0BIAFBADYCACAAIAMgAUGAAhAIQSBqQeABEAgaIAFBgAJBIBBWIAIkAA8LEF4ACxBfAAtOAQJ/IAIgACgCACIDQQRqKAIAIANBCGoiBCgCACIAa0sEQCADIAAgAhAVIAQoAgAhAAsgAygCACAAaiABIAIQCBogBCAAIAJqNgIAQQALSwACQAJ/IAFBgIDEAEcEQEEBIAAoAhggASAAQRxqKAIAKAIQEQAADQEaCyACDQFBAAsPCyAAKAIYIAIgAyAAQRxqKAIAKAIMEQIAC0cBAX8jAEEgayIDJAAgA0EUakEANgIAIANB0IrAADYCECADQgE3AgQgAyABNgIcIAMgADYCGCADIANBGGo2AgAgAyACEDsAC0QBAn8gASgCBCECIAEoAgAhA0EIQQQQUSIBRQRAQQhBBBBhAAsgASACNgIEIAEgAzYCACAAQfyIwAA2AgQgACABNgIACzoBAX9BEEEEEFEiAUUEQEEQQQQQYQALIAFBADYCACABIAApAgA3AgQgAUEMaiAAQQhqKAIANgIAIAELKgACQCAAQXxLDQAgAEUEQEEEDwsgACAAQX1JQQJ0EFEiAEUNACAADwsACzEBAX8gASgCBCICBEAgACACNgIEIABBCGpBATYCACAAIAEoAgA2AgAPCyAAQQA2AgALoAIBBn8gACABKAIIIgMgASgCBEkEfyMAQRBrIgIkACMAQRBrIgUkAAJAAkAgAyABKAIETQRAIAUgARA4IAUoAgAiBwRAIAVBCGooAgAhBiAFKAIEIQQCQCADRQRA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ZWN1cnNpdmVseSBvciBkZXN0cm95ZWQgYWxyZWFkeQQAAAAAAAAAbnVsbCBwb2ludGVyIHBhc3NlZCB0byBydXN0cmVjdXJzaXZlIHVzZSBvZiBhbiBvYmplY3QgZGV0ZWN0ZWQgd2hpY2ggd291bGQgbGVhZCB0byB1bnNhZmUgYWxpYXNpbmcgaW4gcnVzdAAAIwAAAAQAAAAEAAAAJAAAACUAAAAmAAAAY2FsbGVkIGBPcHRpb246OnVud3JhcCgpYCBvbiBhIGBOb25lYCB2YWx1ZQABAAAAAAAAAGxpYnJhcnkvc3RkL3NyYy9wYW5pY2tpbmcucnMIBBAAHAAAAPABAAAfAAAACAQQABwAAADxAQAAHgAAACcAAAAQAAAABAAAACgAAAApAAAAIwAAAAgAAAAEAAAAKgAAACsAAAAsAAAADAAAAAQAAAAtAAAAIwAAAAgAAAAEAAAALgAAAC8AAAAEAAAABAAAADAAAAAxAAAAMgAAAC8AAAAAAAAAAQAAADMAAABsaWJyYXJ5L2FsbG9jL3NyYy9yYXdfdmVjLnJzY2FwYWNpdHkgb3ZlcmZsb3cAAAC0BBAAHAAAAP0BAAAFAAAAYSBmb3JtYXR0aW5nIHRyYWl0IGltcGxlbWVudGF0aW9uIHJldHVybmVkIGFuIGVycm9ybGlicmFyeS9hbGxvYy9zcmMvZm10LnJzACcFEAAYAAAAVQIAABwAAAA4AAAAAAAAAAEAAAA5AAAAaW5kZXggb3V0IG9mIGJvdW5kczogdGhlIGxlbiBpcyAgYnV0IHRoZSBpbmRleCBpcyAAAGAFEAAgAAAAgAUQABIAAAA6IAAAUAUQAAAAAACkBRAAAgAAAGxpYnJhcnkvY29yZS9zcmMvZm10L251bS5ycwC4BRAAGwAAAGUAAAAUAAAAMGIweDBvMDAwMTAyMDMwNDA1MDYwNzA4MDkxMDExMTIxMzE0MTUxNjE3MTgxOTIwMjEyMjIzMjQyNTI2MjcyODI5MzAzMTMyMzMzNDM1MzYzNzM4Mzk0MDQxNDI0MzQ0NDU0NjQ3NDg0OTUwNTE1MjUzNTQ1NTU2NTc1ODU5NjA2MTYyNjM2NDY1NjY2NzY4Njk3MDcxNzI3Mzc0NzU3Njc3Nzg3OTgwODE4MjgzODQ4NTg2ODc4ODg5OTA5MTkyOTM5NDk1OTY5Nzk4OTlyYW5nZSBzdGFydCBpbmRleCAgb3V0IG9mIHJhbmdlIGZvciBzbGljZSBvZiBsZW5ndGggAACyBhAAEgAAAMQGEAAiAAAAcmFuZ2UgZW5kIGluZGV4IPgGEAAQAAAAxAYQACIAAABzbGljZSBpbmRleCBzdGFydHMgYXQgIGJ1dCBlbmRzIGF0IAAYBxAAFgAAAC4HEAANAAAARXJyb3IAbwlwcm9kdWNlcnMCCGxhbmd1YWdlAQRSdXN0AAxwcm9jZXNzZWQtYnkDBXJ1c3RjHTEuNTguMSAoZGI5ZDFiMjBiIDIwMjItMDEtMjApBndhbHJ1cwYwLjE5LjAMd2FzbS1iaW5kZ2VuBjAuMi43OQAaD3RhcmdldF9mZWF0dXJlcwErB3NpbWQxMjg=");

  // js/highway-wasm/src/index.ts
  var useSimd = () => WebAssembly.validate(new Uint8Array([
    0,
    97,
    115,
    109,
    1,
    0,
    0,
    0,
    1,
    5,
    1,
    96,
    0,
    1,
    123,
    3,
    2,
    1,
    0,
    10,
    10,
    1,
    8,
    0,
    65,
    0,
    253,
    15,
    253,
    98,
    11
  ]));
  var useModule = (hasher) => (key) => {
    if (key.length && key.length !== 32)
      throw new Error("Key must be 32 bytes");
    return {
      hasher,
      new: (key2) => hasher.new(key2),
      hash64: (data) => {
        const hh = hasher.new(key);
        hh.append(data);
        return hh.finalize64();
      },
      hash128: (data) => {
        const hh = hasher.new(key);
        hh.append(data);
        return hh.finalize128();
      },
      hash256: (data) => {
        const hh = hasher.new(key);
        hh.append(data);
        return hh.finalize256();
      }
    };
  };
  var useHighway = async (options) => {
    const simd = useSimd() && (options?.simd ?? true);
    simd ? await highway_simd_default(highway_simd_bg_default) : await highway_default(highway_bg_default);
    return useModule(simd ? WasmHighway2 : WasmHighway)(options?.key ?? Uint8Array.from({ length: 32 }));
  };
  return __toCommonJS(src_exports);
})();
